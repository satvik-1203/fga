// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String        @id
  email       String        @unique
  pfp         String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  // awsSession Json?
  // awsRoleArn String?
  name        String
  Org         Org?          @relation(fields: [orgId], references: [id])
  orgId       String?
  ServiceUser ServiceUser[]
}

model PendingUser {
  id        String   @id @default(cuid())
  email     String
  createdAt DateTime @default(now())
  org       Org      @relation(fields: [orgId], references: [id])
  orgId     String
}

model ServiceUser {
  id            String @id @default(cuid())
  service       String
  serviceUserId String
  user          User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
}

model Org {
  id          String        @id @default(cuid())
  name        String
  createdAt   DateTime      @default(now())
  users       User[]
  creds       Credential[]
  PendingUser PendingUser[]
}

model Credential {
  id      String @id @default(cuid())
  name    String
  org     Org    @relation(fields: [orgId], references: [id])
  orgId   String
  secrets Json

  @@unique([orgId, name])
}
